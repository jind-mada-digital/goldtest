{% put scripts %}
    <script>
        $(function () {
            var $body = $('body');
            var $form = $('#mall-add-to-cart');
            var $addToCart = $('.mall-product__add-to-cart');

            $body.on('click', '.js-mall-property-selector', function (e) {
                var $this = $(this);
                // $this.closest('.mall-product__property').find('.js-mall-property-selector').removeClass('')
                $this.closest('.mall-product__property').find('[data-mall-property]')
                    .val($this.data('id'))
                    .trigger('change');

            });

            $body.on('change', '[data-mall-property]', function (e, isInitial) {
                var values = $('[data-mall-property]').map(function () {
                    return this.value;
                }).toArray();

                var props = {};
                $('[data-mall-custom-field]').map(function () {
                    if (this.type === 'checkbox' && !this.checked) {
                        return
                    }
                    return props[this.dataset.id] = this.value
                });

                $addToCart.html('<div class="mall-product__property-stock mall-product__property-stock--checking">{{ 'offline.mall::frontend.stock.checking' | trans }}</div>');

                $.request('onChangeProperty', {
                    data: {values: values, props: props, initial: isInitial},
                    loading: isInitial ? null : $.oc.stripeLoadIndicator
                })
            });

            var firstProperty = $('[data-mall-property]:first');
            if (firstProperty.length) {
                firstProperty.trigger('change', true)
            } else {
                {#
                   In case the product has no special properties we simply check the stock once
                   since nothing can be configured afterwards.
                #}
                $.request('onCheckProductStock', {
                    data: {slug: '{{ item.slug }}'},
                    loading: null
                })
            }

            {# Handle clicks on the image selector for custom field type "image" and "color" #}
            $body.on('click', '.mall-option-selector', function () {
                $(this.dataset.target).val(this.dataset.value).trigger('change');

                $(this).parent().find('.is-active').removeClass('is-active');
                $(this).addClass('is-active');
            });

            {# Reload pricing information when a custom field is changed #}
            $body.on('change', '[data-mall-custom-field]', function () {
                $.request('onChangeConfiguration', {
                    form: $form,
                    loading: $.oc.stripeLoadIndicator
                })
            });

            var $imagesWrapper = $('.mall-product__images');
            var $imageActive = $imagesWrapper.find('.full-image');
            var $imagesThumbnails = $imagesWrapper.find('.thumbnail');

            $imagesThumbnails.on('click', function (event) {
                event.preventDefault();
                var $item = $(this);
                $imagesThumbnails.removeClass('active');
                $item.addClass('active');
                $imageActive.removeAttr('srcset');
                $imageActive.attr('src', $item.data('full-src'));
                $imageActive.attr('srcset', $item.data('full-srcset'));
            });

            $body.on('change', '#quantity', function (e) {
                console.log('qte changed');
                var $quantityLessBtn = $('.btn-quantity.less');

                $quantityLessBtn.removeAttr('disabled');

                if (this.value < 2) {
                    $quantityLessBtn.attr('disabled', true);
                }
            });

            $body.on('click', '.btn-quantity.more', function (event) {
                event.preventDefault();
                var $quantity = $('#quantity');
                var quantity = parseInt($quantity.val());

                $quantity.val(quantity + 1).trigger('change');
            });

            $body.on('click', '.btn-quantity.less', function (event) {
                event.preventDefault();
                var $quantity = $('#quantity');
                var quantity = parseInt($quantity.val());

                if (quantity > 1) {
                    $quantity.val(quantity - 1).trigger('change');
                }
            });
        })
    </script>
{% endput %}